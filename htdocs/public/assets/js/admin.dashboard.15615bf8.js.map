{"version":3,"sources":["webpack:///./src/views/admin/Dashboard.vue?e836","webpack:///src/views/admin/Dashboard.vue","webpack:///./src/views/admin/Dashboard.vue?a174","webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///../../../../src/components/VSparkline/helpers/core.ts","webpack:///../../../../src/components/VSparkline/helpers/math.ts","webpack:///../../../../src/components/VSparkline/helpers/path.ts","webpack:///../../../src/components/VSparkline/VSparkline.ts","webpack:///./src/views/admin/Dashboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","ref","hover","stats","_e","userChartLabels","userChartValues","_v","_s","$t","total","users","class","signupsChange","formatNumber","name","version","staticRenderFns","data","created","$vuetify","breakpoint","mdAndUp","$store","dispatch","locale","moment","substr","loadStats","methods","axios","Intl","NumberFormat","replace","format","number","mixins","props","boilerplate","loading","tile","transition","type","types","default","computed","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","genBone","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","h","style","undefined","maxY","totalValues","values","maxValue","Math","minValue","gridX","maxX","gridY","x","minX","index","y","value","horizonY","height","parseInt","p0","p2","p1","vector","to","from","unitVector","radius","fill","start","points","end","next","prev","isCollinear","checkCollinear","point","threshold","getDistance","isTooCloseForRadius","radiusForPoint","before","moveTo","after","inheritAttrs","autoDraw","autoDrawDuration","autoDrawEasing","autoLineWidth","color","gradient","gradientDirection","validator","val","includes","String","labels","labelSize","Number","lineWidth","padding","showLabels","smooth","Boolean","width","lastLength","parsedPadding","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","totalWidth","_lineWidth","totalPadding","parseFloat","boundary","minY","hasLabels","$scopedSlots","parsedLabels","len","i","item","normalizedValues","map","_values","genPoints","textY","_radius","watch","immediate","handler","path","genGradient","stops","offset","id","x1","y1","x2","y2","genG","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","_uid","genLabels","genLabel","label","genBars","bars","offsetX","viewBox","genClipPath","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","component","VBtn","VCard","VCardText","VCol","VContainer","VDivider","VFadeTransition","VHover","VIcon","VOverlay","VResponsive","VRow","VSkeletonLoader","VSparkline"],"mappings":"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","file":"js/admin.dashboard.15615bf8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"viewContainer\"},[_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\",\"lg\":\"4\",\"xl\":\"3\"}},[_c('v-hover',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar hover = ref.hover;\nreturn [_c('v-card',[(_vm.stats===null)?_c('v-skeleton-loader',{attrs:{\"type\":\"card\"}}):_vm._e(),(_vm.stats!==null)?_c('div',[_c('v-responsive',{attrs:{\"aspect-ratio\":2.4}},[_c('v-sparkline',{attrs:{\"labels\":_vm.stats.userChartLabels,\"value\":_vm.stats.userChartValues,\"type\":\"trend\",\"smooth\":\"\",\"stroke-linecap\":\"round\",\"color\":\"grey\",\"line-width\":\"3\",\"padding\":\"16\",\"height\":\"100%\"}})],1),_c('v-divider'),_c('v-card-text',[_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('users'))+\" \"),_c('span',[_vm._v(\"(\"+_vm._s(_vm.stats.total.users)+\")\")])]),_c('span',{class:{'red--text': _vm.stats.users.signupsChange < 0, 'green--text': _vm.stats.users.signupsChange > 0}},[(_vm.stats.users.signupsChange < 0)?_c('v-icon',{class:{'red--text': _vm.stats.users.signupsChange < 0, 'green--text': _vm.stats.users.signupsChange > 0},attrs:{\"size\":\"14\"}},[_vm._v(\"mdi-arrow-down\")]):_vm._e(),(_vm.stats.users.signupsChange > 0)?_c('v-icon',{class:{'red--text': _vm.stats.users.signupsChange < 0, 'green--text': _vm.stats.users.signupsChange > 0},attrs:{\"size\":\"14\"}},[_vm._v(\"mdi-arrow-up\")]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.formatNumber(_vm.stats.users.signupsChange))+\" \")],1),_vm._v(\" \"+_vm._s(_vm.$t('vs_past_7_days'))+\" \")])],1):_vm._e(),_c('v-fade-transition',[(hover)?_c('v-overlay',{attrs:{\"absolute\":\"\"}},[_c('v-btn',{attrs:{\"x-large\":\"\",\"rounded\":\"\",\"to\":{ name: 'admin.users' },\"color\":\"primary\"}},[_vm._v(_vm._s(_vm.$t('more'))+\" \"),_c('v-icon',{staticClass:\"ml-1\",attrs:{\"size\":\"15\"}},[_vm._v(\"mdi-arrow-right\")])],1)],1):_vm._e()],1)],1)]}}])})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\",\"lg\":\"4\",\"xl\":\"3\"}},[_c('v-hover',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar hover = ref.hover;\nreturn [_c('v-card',[(_vm.stats===null)?_c('v-skeleton-loader',{attrs:{\"type\":\"card\"}}):_vm._e(),(_vm.stats!==null)?_c('div',[_c('v-responsive',{staticClass:\"d-flex align-center\",attrs:{\"aspect-ratio\":2.4,\"align\":\"center\"}},[_c('v-icon',{attrs:{\"size\":\"96\",\"color\":\"grey\"}},[_vm._v(\"mdi-account-circle\")])],1),_c('v-divider'),_c('v-card-text',[_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('profile')))]),_vm._v(\" \"+_vm._s(_vm.$t('profile_info'))+\" \")])],1):_vm._e(),_c('v-fade-transition',[(hover)?_c('v-overlay',{attrs:{\"absolute\":\"\"}},[_c('v-btn',{attrs:{\"x-large\":\"\",\"rounded\":\"\",\"to\":{ name: 'profile' },\"color\":\"primary\"}},[_vm._v(_vm._s(_vm.$t('more'))+\" \"),_c('v-icon',{staticClass:\"ml-1\",attrs:{\"size\":\"15\"}},[_vm._v(\"mdi-arrow-right\")])],1)],1):_vm._e()],1)],1)]}}])})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"6\",\"lg\":\"4\",\"xl\":\"3\"}},[_c('v-card',[(_vm.stats===null)?_c('v-skeleton-loader',{attrs:{\"type\":\"card\"}}):_vm._e(),(_vm.stats!==null)?_c('div',[_c('v-responsive',{staticClass:\"d-flex align-center\",attrs:{\"aspect-ratio\":2.4,\"align\":\"center\"}},[_c('v-icon',{attrs:{\"size\":\"96\",\"color\":\"grey\"}},[_vm._v(\"mdi-information-outline\")])],1),_c('v-divider'),_c('v-card-text',[_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('version'))+\" \"+_vm._s(_vm.stats.version))]),_vm._v(\" \"+_vm._s(_vm.$t('version_info'))+\" \")])],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"viewContainer\">\r\n    <v-container>\r\n      <v-row>\r\n        <v-col\r\n          cols=\"12\"\r\n          sm=\"6\"\r\n          md=\"6\"\r\n          lg=\"4\"\r\n          xl=\"3\"\r\n        >\r\n          <v-hover>\r\n            <template v-slot:default=\"{ hover }\">\r\n              <v-card>\r\n                <v-skeleton-loader\r\n                  v-if=\"stats===null\"\r\n                  type=\"card\"\r\n                />\r\n                  <div v-if=\"stats!==null\">\r\n                    <v-responsive :aspect-ratio=\"2.4\">\r\n                      <v-sparkline\r\n                        :labels=\"stats.userChartLabels\"\r\n                        :value=\"stats.userChartValues\"\r\n                        type=\"trend\"\r\n                        smooth\r\n                        stroke-linecap=\"round\"\r\n                        color=\"grey\"\r\n                        line-width=\"3\"\r\n                        padding=\"16\"\r\n                        height=\"100%\"\r\n                      ></v-sparkline>\r\n                    </v-responsive>\r\n                    <v-divider/>\r\n                    <v-card-text>\r\n                      <h2 class=\"title\">{{ $t('users') }} <span>({{ stats.total.users }})</span></h2>\r\n                      <span :class=\"{'red--text': stats.users.signupsChange < 0, 'green--text': stats.users.signupsChange > 0}\">\r\n                        <v-icon size=\"14\" v-if=\"stats.users.signupsChange < 0\" :class=\"{'red--text': stats.users.signupsChange < 0, 'green--text': stats.users.signupsChange > 0}\">mdi-arrow-down</v-icon>\r\n                        <v-icon size=\"14\" v-if=\"stats.users.signupsChange > 0\" :class=\"{'red--text': stats.users.signupsChange < 0, 'green--text': stats.users.signupsChange > 0}\">mdi-arrow-up</v-icon>\r\n                        {{ formatNumber(stats.users.signupsChange) }}\r\n                      </span>\r\n                      {{ $t('vs_past_7_days') }}\r\n                    </v-card-text>\r\n                  </div>\r\n                <v-fade-transition>\r\n                  <v-overlay\r\n                    v-if=\"hover\"\r\n                    absolute\r\n                  >\r\n                    <v-btn x-large rounded :to=\"{ name: 'admin.users' }\" color=\"primary\">{{ $t('more') }} <v-icon size=\"15\" class=\"ml-1\">mdi-arrow-right</v-icon></v-btn>\r\n                  </v-overlay>\r\n                </v-fade-transition>\r\n              </v-card>\r\n            </template>\r\n          </v-hover>\r\n        </v-col>\r\n        <v-col\r\n          cols=\"12\"\r\n          sm=\"6\"\r\n          md=\"6\"\r\n          lg=\"4\"\r\n          xl=\"3\"\r\n        >\r\n          <v-hover>\r\n            <template v-slot:default=\"{ hover }\">\r\n              <v-card>\r\n                <v-skeleton-loader\r\n                  v-if=\"stats===null\"\r\n                  type=\"card\"\r\n                />\r\n                  <div v-if=\"stats!==null\">\r\n                    <v-responsive :aspect-ratio=\"2.4\" align=\"center\" class=\"d-flex align-center\">\r\n                      <v-icon size=\"96\" color=\"grey\">mdi-account-circle</v-icon>\r\n                    </v-responsive>\r\n                    <v-divider/>\r\n                    <v-card-text>\r\n                      <h2 class=\"title\">{{ $t('profile') }}</h2>\r\n                      {{ $t('profile_info') }}\r\n                    </v-card-text>\r\n                  </div>\r\n                <v-fade-transition>\r\n                  <v-overlay\r\n                    v-if=\"hover\"\r\n                    absolute\r\n                  >\r\n                    <v-btn x-large rounded :to=\"{ name: 'profile' }\" color=\"primary\">{{ $t('more') }} <v-icon size=\"15\" class=\"ml-1\">mdi-arrow-right</v-icon></v-btn>\r\n                  </v-overlay>\r\n                </v-fade-transition>\r\n              </v-card>\r\n            </template>\r\n          </v-hover>\r\n        </v-col>\r\n        <v-col\r\n          cols=\"12\"\r\n          sm=\"6\"\r\n          md=\"6\"\r\n          lg=\"4\"\r\n          xl=\"3\"\r\n        >\r\n          <v-card>\r\n            <v-skeleton-loader\r\n              v-if=\"stats===null\"\r\n              type=\"card\"\r\n            />\r\n              <div v-if=\"stats!==null\">\r\n                <v-responsive :aspect-ratio=\"2.4\" align=\"center\" class=\"d-flex align-center\">\r\n                  <v-icon size=\"96\" color=\"grey\">mdi-information-outline</v-icon>\r\n                </v-responsive>\r\n                <v-divider/>\r\n                <v-card-text>\r\n                  <h2 class=\"title\">{{ $t('version') }} {{ stats.version }}</h2>\r\n                  {{ $t('version_info') }}\r\n                </v-card-text>\r\n              </div>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    locale: 'en',\r\n    stats: null\r\n  }),\r\n  created () {\r\n    // Show left drawer\r\n    if (this.$vuetify.breakpoint.mdAndUp) this.$store.dispatch('setDashboardDrawer', true)\r\n\r\n    // Set locale\r\n    let locale = Intl.DateTimeFormat().resolvedOptions().locale || 'en'\r\n    locale = (this.$auth.check()) ? this.$auth.user().locale : locale\r\n    this.locale = locale\r\n\r\n    this.moment.locale(this.locale.substr(0,2))\r\n\r\n    // Load dashboard stats\r\n    this.loadStats()\r\n  },\r\n  methods: {\r\n    loadStats () {\r\n      this.axios\r\n        .get('/admin/stats', { params: { locale: this.$i18n.locale }})\r\n        .then(response => {\r\n          let stats = response.data\r\n          this.stats = stats\r\n\r\n          let userChartLabels = this.$_.map(stats.users.signupsCurrentPeriod, (count, date) => {\r\n            return this.moment(date).format('D')\r\n          })\r\n\r\n          let userChartValues = this.$_.map(stats.users.signupsCurrentPeriod, (count, date) => {\r\n            return count\r\n          })\r\n\r\n          this.stats.userChartLabels = userChartLabels\r\n          this.stats.userChartValues = userChartValues\r\n\r\n          this.overlay = false\r\n          this.loading = false\r\n        })\r\n    },\r\n    formatNumber (number) {\r\n      return new Intl.NumberFormat(this.locale.replace('_', '-')).format(number)\r\n    },\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, PropType } from 'vue'\nimport { getSlot } from '../../util/helpers'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object as PropType<Record<string, string>>,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalValues - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / (maxValue - minValue)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array as Prop<string[]>,\n      default: () => ([]),\n    },\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || this.color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            x1: +(gradientDirection === 'left'),\n            y1: +(gradientDirection === 'top'),\n            x2: +(gradientDirection === 'right'),\n            y2: +(gradientDirection === 'bottom'),\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: this.color || 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          id: this._uid,\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=7cc6c2d2&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VFadeTransition } from 'vuetify/lib/components/transitions';\nimport { VHover } from 'vuetify/lib/components/VHover';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VResponsive } from 'vuetify/lib/components/VResponsive';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSkeletonLoader } from 'vuetify/lib/components/VSkeletonLoader';\nimport { VSparkline } from 'vuetify/lib/components/VSparkline';\ninstallComponents(component, {VBtn,VCard,VCardText,VCol,VContainer,VDivider,VFadeTransition,VHover,VIcon,VOverlay,VResponsive,VRow,VSkeletonLoader,VSparkline})\n"],"sourceRoot":""}